//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AerLingus.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    
    public partial class Flight_Records
    {
        [MinLength(0 , ErrorMessage = "Min lenght is 0 characters!")]
        [MaxLength(16, ErrorMessage = "Max lenght is 16 characters!")]
        public string identifierNo { get; set; }

        [Required(ErrorMessage = "Field is required!")]
        [MinLength(1, ErrorMessage = "Min lenght is 1 characters!")]
        [MaxLength(2, ErrorMessage = "Max lenght is 2 characters!")]
        public string transactionType { get; set; }

        [MinLength(0)]
        [MaxLength(30, ErrorMessage = "Max lenght is 30 characters!")]
        public string otherFFPNo { get; set; }

        [MinLength(0)]
        [MaxLength(30, ErrorMessage = "Max lenght is 30 characters!")]
        public string otherFFPScheme { get; set; }

        [Required(ErrorMessage = "Field is required!")]
        [MinLength(1, ErrorMessage = "Min lenght is 1 characters!")]
        [MaxLength(30, ErrorMessage = "Max lenght is 30 characters!")]
        public string firstName { get; set; }

        [Required(ErrorMessage = "Field is required!")]
        [MinLength(1, ErrorMessage = "Min lenght is 1 characters!")]
        [MaxLength(30, ErrorMessage = "Max lenght is 30 characters!")]
        public string lastName { get; set; }

        [MinLength(0)]
        [MaxLength(100, ErrorMessage = "Max lenght is 30 characters!")]
        public string partnerTransactionNo { get; set; }

       // [Required(ErrorMessage = "Field is required!")]
        [DataType(DataType.DateTime)]
        [Display(Name = "Booking Date") ,DisplayFormat(ApplyFormatInEditMode = true, DataFormatString = "{0:MM/dd/yy H:mm:ss tt}")]
        public DateTime bookingDate { get; set; }

        [Required(ErrorMessage = "Field is required!")]
        [DataType(DataType.Date)]
        [Display(Name = "Departure Date"), DisplayFormat(ApplyFormatInEditMode = true)]
        public System.DateTime departureDate { get; set; }

        [Required(ErrorMessage = "Field is required!")]
        [MinLength(3, ErrorMessage = "Min lenght is 3 characters!")]
        [MaxLength(3, ErrorMessage = "Max lenght is 3 characters!")]
        public string origin { get; set; }

        [Required(ErrorMessage = "Field is required!")]
        [MinLength(3, ErrorMessage = "Min lenght is 3 characters!")]
        [MaxLength(3, ErrorMessage = "Max lenght is 3 characters!")]
        public string destination { get; set; }

        [Required(ErrorMessage = "Field is required!")]
        [MinLength(1, ErrorMessage = "Min lenght is 1 characters!")]
        [MaxLength(2, ErrorMessage = "Max lenght is 2 characters!")]
        public string bookingClass { get; set; }

        [MinLength(0)]
        [MaxLength(1, ErrorMessage = "Max lenght is 1 characters!")]
        public string cabinClass { get; set; }

        [Required(ErrorMessage = "Field is required!")]
        [MinLength(1, ErrorMessage = "Min lenght is 1 characters!")]
        [MaxLength(4, ErrorMessage = "Max lenght is 4 characters!")]
        public string marketingFlightNo { get; set; }

        [Required(ErrorMessage = "Field is required!")]
        [MinLength(1, ErrorMessage = "Min lenght is 1 characters!")]
        [MaxLength(2, ErrorMessage = "Max lenght is 4 characters!")]
        public string marketingAirline { get; set; }

        [Required(ErrorMessage = "Field is required!")]
        [MinLength(1, ErrorMessage = "Min lenght is 1 characters!")]
        [MaxLength(4, ErrorMessage = "Max lenght is 4 characters!")]
        public string operatingFlightNo { get; set; }

        [Required(ErrorMessage = "Field is required!")]
        [MinLength(1, ErrorMessage = "Min lenght is 1 characters!")]
        [MaxLength(2, ErrorMessage = "Min lenght is 2 characters!")]
        public string operatingAirline { get; set; }

        [MinLength(13, ErrorMessage = "Min lenght is 13 characters!")]
        [MaxLength(14, ErrorMessage = "Max lenght is 14 characters!")]
        public string ticketNo { get; set; }

        [MinLength(0)]
        [MaxLength(25, ErrorMessage = "Max lenght is 25 characters!")]
        public string externalPaxID { get; set; }

        [MinLength(0)]
        [MaxLength(2, ErrorMessage = "Max lenght is 2 characters!")]
        public string couponNo { get; set; }

        [Required(ErrorMessage = "Field is required!")]
        [MinLength(1, ErrorMessage = "Min lenght is 1 characters!")]
        [MaxLength(6, ErrorMessage = "Max lenght is 6 characters!")]
        public string pnrNo { get; set; }

        [Range(minimum: 0, maximum: 99999,  ErrorMessage = "Insert number in range from 0 to 99999!")]
        public Nullable<long> distance { get; set; }

        [Range(minimum: 0, maximum: 999999999, ErrorMessage = "Insert number in range from 0 to 999999999!")]
        public Nullable<float> baseFare { get; set; }

        [Range(minimum: 0, maximum: 999999999, ErrorMessage = "Insert number in range from 0 to 999999999!")]
        public Nullable<float> discountBase { get; set; }

        [Range(minimum: 0, maximum: 999999999, ErrorMessage = "Insert number in range from 0 to 999999999!")]
        public Nullable<float> exciseTax { get; set; }

        [MinLength(0)]
        [MaxLength(1, ErrorMessage = "Max lenght is 1 characters!")]
        public string customerType { get; set; }

        [MinLength(0)]
        [MaxLength(1, ErrorMessage = "Max lenght is 1 characters!")]
        public string promotionCode { get; set; }

        [MinLength(0)]
        [MaxLength(3, ErrorMessage = "Min lenght is 3 characters!")]
        public string ticketCurrency { get; set; }

        [MinLength(0)]
        [MaxLength(3, ErrorMessage = "Min lenght is 3 characters!")]
        public string targetCurrency { get; set; }

        [Range(minimum: 0, maximum: 9999999999, ErrorMessage = "Insert number in range from 0 to 999999999!")]
        public Nullable<float> exchangeRate { get; set; }

        [MinLength(0)]
        [MaxLength(10, ErrorMessage = "Min lenght is 3 characters!")]
        public string fareBasis { get; set; }
    }
}
